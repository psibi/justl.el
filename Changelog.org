* 0.15

- Fix a bug with non display of private recipe.
- Make the default of ~justl-include-private-recipes~ to nil to match
  with just behaviour.
- Kill process if it's still running before starting a new one in the same
  buffer.
- Bugfix: Use the buffer's last command for recompile, not the last
  one across all buffers.
- Support optional argument prompting in
  ~justl-exec-recipe-in-dir~. Fixes [[https://github.com/psibi/justl.el/issues/41][issue 41]].
- Ability to set new working directory in justl buffers via
  ~justl-set-new-working-dir~. This is useful to execute your recipes
  with no-cd recipe attribute.
- Justl buffer names are changed to include filename too. This is made
  in preparation for supporting just modules.
- Add ~justl-pop-to-buffer-on-display~. When on, input focus moves to the justl
  output buffer when it is displayed (the previous behavior). Otherwise the
  output buffer is displayed without selecting it. (defaults to on).
- Better defgroup integration.
- [[https://github.com/psibi/justl.el/pull/70][Modules support]]
- Check for fallback location with JUST_JUSTFILE environment variable.
- Bugfix: handle ~justl-per-recipe-buffer~ with ~justl-exec-recipe-in-dir~
  and ~justl-exec-default-recipe~.

* 0.14

- Respect buffer-local environments, for compatibility with ~envrc.el~
  when ~just~ is installed on a per-project basis.
- Add ~justl-include-private-recipes~ to show private recipes in the
  list (defaults to on).
- Rewritten internals, using ~just~ itself to parse recipe information.
- Add ~justl-per-recipe-buffer~ to create new buffers per recipe.
- Use Cask for development and testing.

* 0.13

- TRAMP support
- ~justl-exec-recipe-in-dir~ prompts for arguments when needed. Fixes
  [[https://github.com/psibi/justl.el/issues/30][issue 30]].
- Fix directory traversing when searching for justfiles.
- Improve error handling when a justfile is not found on different
  cases.
- Add documentation on how to test it with TRAMP and docker.
- Update CI to support Emacs 29.1

* 0.12

- Add unstable flag to transient.
- Change justl--justfile to justl-justfile to a safe local defcustom.
- Drop support for Emacs 26.3

* 0.11

- Implement interactive function ~justl-exec-default-recipe~

* 0.10

- Integrate compilation mode for ~justl-exec-recipe-in-dir~
- Implement new logic for refreshing justl buffer. This improves UX
  when there is a syntax issue with justfile. Fixes [[https://github.com/psibi/justl.el/issues/23][issue 23]].
- Improve usage documentation.

* 0.9

- Handle carriage return properly on the compilation buffer.

* 0.8

- Define a compilation mode named ~justl-compile-mode~. Executing
  ~justl-exec-recipe~ (which is bind to the keybinding ~e~ in the
  transient buffer) which show results in this mode.
- Don't output at the bottom of the screen if the just target
  execution fails. Instead, it's displayed in the compilation mode
  now.
- Use font locking to hightlight the execution status of just target.
- Make the ~*just-process*~ buffer as read only. This prevents from
  un-intentional edits when viewing the logs.
- Use the variable ~justl-executable~ instead of hardcoding the string
  ~just~ everywhere.
- Update CI to test for 28.1 Emacs. Remove other old version from the
  check matrix.

* 0.7

- Finds all types of justfiles now and makes it compatible with the
  ~just~ program. Earlier it used to just working with ~justfile~ and
  ~.justfile~.

* 0.6

- Make the directory parsing smart. Now invoking justl from any
  subdirectory should work.
- eshell executes from the directory where justfile is placed.
- Introduce buffer local variable ~justl--justfile~ which contains
  the justfile location for a particular justl-mode buffer.

* 0.5

- Stop following symbolic link as it leads to a high CPU usage. This
  situation can happen frequently in a distribution like NixOS where
  you can have a symbolic link inside nix's store ~/nix/store~.
- Minor cleanup in the way logging happens in the ~just-process~
  buffer.
- Fix bug when process execution itself throws error.
- Migrate from the deprecated ~define-transient-command~
- Fix justl process when you pass transient argument for ~--color~

* 0.4

- Provides explicit details once just recipe execution is
  completed. This is what you used to appear before:

#+begin_example sh
echo "planner"
planner
#+end_example

This is what appears now:

#+begin_example sh
echo "planner"
planner

Finished execution: exit-code 0
#+end_example

This is useful for two reasons: When a huge amount of output is being
produced from a just target, we know exactly when the process has
finished and what it's exit status code looks like.

- Better error handling when you have error in your just file.

* 0.3

- Add ability to turn off color in the output. Useful for eshell
  integration which doesn't recognize color without additional setup.

- Integration with eshell done. You can now execute the recipes in
  either eshell or open eshell and give positional arguments etc for
  the recipe before executing it. The key binding for it is *E* and
  *W*.

- Handle recipe names starting with /@/

- Add *justl-go-to-recipe* function which will take you to the
  justfile where the recipe under the cursor is present. It's default
  key binding is *RET*

- Change behaviour of executing recipes. It now reads the recipe to
  see if it has any input parameters and asks the value explicitly
  along with some smart behavior for default values. Eg:

#+begin_example just
push2 version1 version2:
    echo {{version1}} {{version2}}
#+end_example

It will ask the values for both version1 and version2 explicitly in
the above case.

- Implement *justl--exec-recipe-with-args* to provide explicit
  arguments to it. It's shortcut in *justl* buffer is *w*.

* 0.2

- Address various comments from the melpa maintainers.
- Use sharp quotes *#'* to provide hints to the byte compiler which
  will warn if the function is undefined.

* 0.1

- Initial version released
